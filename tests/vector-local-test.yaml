# Vector Local Test Configuration
# This configuration is for testing Vector with stdin input and S3 output

data_dir: "/tmp/vector-data"

api:
  enabled: true
  address: "127.0.0.1:8686"
  playground: false

# Sources
sources:
  stdin_logs:
    type: "stdin"
    
# Transforms
transforms:
  enrich_metadata:
    type: "remap"
    inputs: ["stdin_logs"]
    source: |
      # Add fake tenant metadata for testing
      .customer_id = "test-tenant"
      .cluster_id = "local-cluster"
      .environment = "development"  
      .application = "test-app"
      .pod_name = "test-pod-123"
      
      # Extract log level if present
      log_level_match = parse_regex(.message, r'(?P<level>TRACE|DEBUG|INFO|WARN|ERROR|FATAL)') ?? {}
      .log_level = log_level_match.level || "INFO"
      
      # Add timestamp if not present
      if !exists(.timestamp) {
        .timestamp = now()
      }

  structure_for_s3:
    type: "remap"
    inputs: ["enrich_metadata"]
    source: |
      # Restructure for S3 storage
      . = {
        "timestamp": .timestamp,
        "customer_id": .customer_id,
        "cluster_id": .cluster_id,
        "environment": .environment,
        "application": .application,
        "pod_name": .pod_name,
        "log_level": .log_level,
        "message": .message,
        "source": "vector-local-test"
      }

# Sinks
sinks:
  s3_logs:
    type: "aws_s3"
    inputs: ["structure_for_s3"]
    bucket: "${S3_BUCKET_NAME}"
    region: "${AWS_REGION}"
    key_prefix: "{{ customer_id }}/{{ cluster_id }}/{{ application }}/{{ pod_name }}/"
    filename_time_format: "%Y%m%d%H%M%S"
    filename_append_uuid: true
    filename_extension: "json.gz"
    encoding:
      codec: "json"
    framing:
      method: "newline_delimited"
    compression: "gzip"
    batch:
      max_bytes: 1037576  # 1MB for testing
      max_events: 100
      timeout_secs: 30  # 30 seconds for testing
    buffer:
      type: "disk"
      max_size: 268435488  # 256MB (minimum required)
      when_full: "block"
    request:
      retry_attempts: 3
      retry_initial_backoff_secs: 1
      retry_max_duration_secs: 30
    auth:
      assume_role: "${S3_WRITER_ROLE_ARN}"
      
  # Local file backup for debugging
  debug_file:
    type: "file"
    inputs: ["structure_for_s3"]
    path: "/tmp/vector-debug.log"
    encoding:
      codec: "json"
    framing:
      method: "newline_delimited"
    buffer:
      type: "memory"
      max_events: 100